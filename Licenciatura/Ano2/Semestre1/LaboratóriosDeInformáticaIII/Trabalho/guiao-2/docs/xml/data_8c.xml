<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="data_8c" kind="file" language="C++">
    <compoundname>data.c</compoundname>
    <includes refid="data_8h" local="yes">data.h</includes>
    <incdepgraph>
      <node id="1">
        <label>data.c</label>
        <link refid="data_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>data.h</label>
        <link refid="data_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>math.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="5">
        <label>string.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="data_8c_1a3531516a99f0ef533672db086599d419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int compareDates</definition>
        <argsstring>(char *start_date, char *end_date, char *date)</argsstring>
        <name>compareDates</name>
        <param>
          <type>char *</type>
          <declname>start_date</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>end_date</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Função que permite a comparação entre 3 datas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_date</parametername>
</parameternamelist>
<parameterdescription>
<para>Data inicial.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_date</parametername>
</parameternamelist>
<parameterdescription>
<para>Data final.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>Data a descobrir se se encontra entre a inicial e a final.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna 1 se a data se encontra entre a inicial e a final. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data.c" line="17" column="5" bodyfile="data.c" bodystart="17" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1a136be24413b8cc95cf6b84869e1fd38d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifyDate</definition>
        <argsstring>(char *start_date, char *date)</argsstring>
        <name>verifyDate</name>
        <param>
          <type>char *</type>
          <declname>start_date</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>date</declname>
        </param>
        <briefdescription>
<para>Função que permite a comparação entre 2 datas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start_date</parametername>
</parameternamelist>
<parameterdescription>
<para>Data inicial.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>date</parametername>
</parameternamelist>
<parameterdescription>
<para>Data a descobrir se é maior do que a final.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Retorna 1 se a data é maior do que a inicial. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data.c" line="33" column="5" bodyfile="data.c" bodystart="33" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="data_8c_1ad87567e7d7dc8f6e2d6d950e72a7db3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int utf8_strlen</definition>
        <argsstring>(const char *s)</argsstring>
        <name>utf8_strlen</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Função que conta o tamanho da mensagem (funciona para caracteres chineses e arabaes). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Mensagem.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tamanho da mensagem. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data.c" line="47" column="5" bodyfile="data.c" bodystart="47" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data_8h" kindref="compound">data.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a3531516a99f0ef533672db086599d419" kindref="member">compareDates</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*start_date,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end_date,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*date)</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(start_date,<sp/>date)<sp/>&lt;<sp/>0<sp/>&amp;&amp;<sp/>strcmp(date,<sp/>end_date)<sp/>&lt;<sp/>0)<sp/>r<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1a136be24413b8cc95cf6b84869e1fd38d" kindref="member">verifyDate</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*start_date,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*date)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(start_date,<sp/>date)<sp/>&lt;<sp/>0)<sp/>r<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="data_8c_1ad87567e7d7dc8f6e2d6d950e72a7db3d" kindref="member">utf8_strlen</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s)<sp/></highlight><highlight class="comment">//<sp/>fonte:<sp/>https://stackoverflow.com/questions/32936646/getting-the-string-length-on-utf-8-in-c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*s)<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>(*s++<sp/>&amp;<sp/>0xC0)<sp/>!=<sp/>0x80;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="data.c"/>
  </compounddef>
</doxygen>
